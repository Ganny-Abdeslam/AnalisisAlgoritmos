@article{doi:10.2304/elea.2013.10.3.324,
author = {Daniel Araya},
title = {Thinking Forward: Conrad Wolfram on the Computational Knowledge Economy},
journal = {E-Learning and Digital Media},
volume = {10},
number = {3},
pages = {324–327},
year = {2013a},
doi = {10.2304/elea.2013.10.3.324},
URL = {https://doi-org.crai.referencistas.com/10.2304/elea.2013.10.3.324},
eprint = {https://doi-org.crai.referencistas.com/10.2304/elea.2013.10.3.324}
}

@article{doi:10.3233/IA-2011-0012,
author = {Stefania Costantini and Alessio Paolucci and Arianna Tocchio and Panagiota Tsintza},
title = {DALI, RASP, mnemosine: Computational Logic at work},
journal = {Intelligenza Artificiale},
volume = {5},
number = {1},
pages = {107–111},
year = {2011b},
doi = {10.3233/IA-2011-0012},
URL = {https://doi-org.crai.referencistas.com/10.3233/IA-2011-0012},
eprint = {https://doi-org.crai.referencistas.com/10.3233/IA-2011-0012},
abstract = {In this paper, we briefly describe recent research directions of the Artificial Intelligence group of the University of L’Aquila, Italy. Research activities concern Computational Logic and Artificial Intelligence. About Intelligent Logical Agents, in the last years the group has developed the logical agent-oriented language DALI. Work is under way also in other areas, namely, Non-Monotonic Reasoning and Natural Language Processing. We particularly emphasize recent and future work directions.}
}

@article{doi:10.1177/1094342017747692,
author = {Anshu Dubey and Petros Tzeferacos and Don Q Lamb},
title = {The dividends of investing in computational software design: A case study},
journal = {The International Journal of High Performance Computing Applications},
volume = {33},
number = {2},
pages = {322–331},
year = {2019c},
doi = {10.1177/1094342017747692},
URL = {https://doi-org.crai.referencistas.com/10.1177/1094342017747692},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1094342017747692},
abstract = {A significant fraction of computational software for scientific research grows through accretion. In a common scenario, a small group develops a code for a specific purpose. Others find the software useful, so they add to it for their own use. The software grows to the point where its management becomes intractable and scientific results obtained from it become unreliable. This is in stark contrast with a small number of scientific codes that have undergone a design process, be it due to an upfront investment, or when haphazardly grown codes have reset and started again. At a minimum, these codes reduce the time to obtain research results for the communities they serve because individual researchers do not have to develop their own codes. They provide further benefits; the results they produce are more reproducible due to greater scrutiny, leading to better science. One of the more overlooked benefits, which is perhaps of greater significance, is that a well-designed code can expand to serve communities beyond the ones it was designed for. Thus, research communities with similar computational requirements can symbiotically improve computation-based research for each other. In this article, we present a case study of FLASH, a code that was designed and developed for simulating thermonuclear runaways such as novae and type Ia supernovae in astrophysics. Designed to be modular and extensible, users from several diverse research areas have added capabilities to it and adapted it for their own communities. Examples include cosmology, high-energy density physics, core-collapse supernovae, star formation, fluid–structure interactions, and chemical combustion. We give a summary of design features that facilitated the expansion and quantify the effort needed to expand into some of the above-mentioned fields. We also quantify the impact on different communities by mining the database of publications using FLASH, collected by its developers.}
}

@article{doi:10.3102/0013189X20923708,
author = {Okhee Lee and Amy Stephens},
title = {English Learners in STEM Subjects: Contemporary Views on STEM Subjects and Language With English Learners},
journal = {Educational Researcher},
volume = {49},
number = {6},
pages = {426–432},
year = {2020d},
doi = {10.3102/0013189X20923708},
URL = {https://doi-org.crai.referencistas.com/10.3102/0013189X20923708},
eprint = {https://doi-org.crai.referencistas.com/10.3102/0013189X20923708},
abstract = {With the release of the consensus report English Learners in STEM Subjects: Transforming Classrooms, Schools, and Lives, we highlight foundational constructs and perspectives associated with STEM subjects and language with English learners (ELs) that frame the report. The purpose here is to elevate these constructs and perspectives for discussion among the broader education research community. First, we provide an overview of the unique contributions of the report to move the ELs and STEM fields forward. Second, we describe ELs in terms of their heterogeneity and the inconsistency of educational policies that affect their learning opportunities in STEM subjects. Third, we describe contemporary views on STEM subjects and language with ELs that indicate that instructional shifts across STEM subjects and language are mutually supportive. Fourth, we describe promising instructional strategies to promote STEM learning and language development with ELs. Lastly, we close the article by reimagining STEM education with ELs and offer potential next steps. These foundational constructs and perspectives on STEM subjects and language with ELs are critical because they provide the conceptual grounding for the design of the education system for ELs. The report could contribute to building a knowledge base for ELs in STEM subjects and language as education research, policy, and practice converge to reimagine what is possible to both support and challenge ELs to learn academically rigorous content standards that are expected of all students.}
}

@article{doi:10.1177/20438206221075714,
author = {Agnieszka Leszczynski and Sarah Elwood},
title = {Glitch epistemologies for computational cities},
journal = {Dialogues in Human Geography},
volume = {12},
number = {3},
pages = {361–378},
year = {2022e},
doi = {10.1177/20438206221075714},
URL = {https://doi-org.crai.referencistas.com/10.1177/20438206221075714},
eprint = {https://doi-org.crai.referencistas.com/10.1177/20438206221075714},
abstract = {This intervention advances glitches as epistemological vectors for apprehending and engaging the significance of digitally-mediated spatialities that appear nonperformative against normative scripts of urban computational paradigms. Drawing on two strands of contemporary thinking about glitches as systemic design features of digital systems and as generative fissures within them, we mobilize a queer orientation that stays with the generative tensions of urban spatialities that present as idiosyncratic and as interrupting. We mobilize this epistemological approach through illustrative U.S. based examples of seemingly abandoned shared e-bikes, performatively ‘ugly’ homes, and wilful property dilapidation wrought through the registers of desire and aesthetics. In so doing, we show how glitch empistemologies render visible how the technocapitalist manufacturing of normative spatial desires for particular kinds of urban sociospatialities and aesthetic visual signatures are both secured and interrupted on digitally-mediated and -mediatized terrains. Glitch epistemologies establish the significance of small-scale disorientations in digital urban mediations, engaging these nonperformativities and non-computes as unexceptional openings onto everyday possibilities for politics in computational cities.}
}

@article{doi:10.1177/07356331241240460,
author = {Jiangyue Liu and Siran Li},
title = {Toward Artificial Intelligence-Human Paired Programming: A Review of the Educational Applications and Research on Artificial Intelligence Code-Generation Tools},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {5},
pages = {1385–1415},
year = {2024f},
doi = {10.1177/07356331241240460},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241240460},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241240460},
abstract = {Pair Programming is considered an effective approach to programming education, but the synchronous collaboration of two programmers involves complex coordination, making this method difficult to be widely adopted in educational settings. Artificial Intelligence (AI) code-generation tools have outstanding capabilities in program generation and natural language understanding, creating conducive conditions for pairing with humans in programming. Now some more mature tools are gradually being implemented. This review summarizes the current status of educational applications and research on AI-assisted programming technology. Through thematic coding of literature, existing research focuses on five aspects: underlying technology and tool introduction, performance evaluation, the potential impacts and coping strategies, exploration of behavioral patterns in technological application, and ethical and safety issues. A systematic analysis of current literature provides the following insights for future academic research related to the practice of “human-machine pairing” in programming: (1) Affirming the value of AI code-generation tools while also clearly defining their technical limitations and ethical risks; (2) Developing adaptive teaching ecosystems and educational models, conducting comprehensive empirical research to explore the efficiency mechanisms of AI-human paired programming; (3) Further enriching the application of research methods by integrating speculative research with empirical research, combining traditional methods with emerging technologies.}
}

@article{doi:10.3233/IA-2011-0018,
author = {Viviana Mascardi and Giorgio Delzanno and Maurizio Martelli},
title = {Some applications of Computational Logic to the development of intelligent systems and verification methods},
journal = {Intelligenza Artificiale},
volume = {5},
number = {1},
pages = {145–149},
year = {2011g},
doi = {10.3233/IA-2011-0018},
URL = {https://doi-org.crai.referencistas.com/10.3233/IA-2011-0018},
eprint = {https://doi-org.crai.referencistas.com/10.3233/IA-2011-0018},
abstract = {Computational Logic plays a very relevant role in engineering complex systems. It can be used to specify systems at different levels of abstraction. The specifications are executable, thus providing a working prototype for free. Thanks to its well-founded semantics it can be used to reason about the correctness of the specifications, a fundamental aspect when safety critical applications are developed. Researchers working in the Logic Programming Group at DISI, a Genova University Department, have applied methods and tools of Computational Logic for modelling, prototyping, and verifying complex systems. These three research lines are largely overlapping: the complex systems we take into account are often multiagent systems, for which we propose modelling languages as well as prototyping environments and verification techniques. In this paper we describe activities that, in the last decade, we carried out along these research lines.}
}

@article{doi:10.1177/0049124117729703,
author = {Laura K. Nelson},
title = {Computational Grounded Theory: A Methodological Framework},
journal = {Sociological Methods & Research},
volume = {49},
number = {1},
pages = {3–42},
year = {2020h},
doi = {10.1177/0049124117729703},
URL = {https://doi-org.crai.referencistas.com/10.1177/0049124117729703},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0049124117729703},
abstract = {This article proposes a three-step methodological framework called computational grounded theory, which combines expert human knowledge and hermeneutic skills with the processing power and pattern recognition of computers, producing a more methodologically rigorous but interpretive approach to content analysis. The first, pattern detection step, involves inductive computational exploration of text, using techniques such as unsupervised machine learning and word scores to help researchers to see novel patterns in their data. The second, pattern refinement step, returns to an interpretive engagement with the data through qualitative deep reading or further exploration of the data. The third, pattern confirmation step, assesses the inductively identified patterns using further computational and natural language processing techniques. The result is an efficient, rigorous, and fully reproducible computational grounded theory. This framework can be applied to any qualitative text as data, including transcribed speeches, interviews, open-ended survey data, or ethnographic field notes, and can address many potential research questions.}
}

@article{doi:10.1177/07356331221115661,
author = {Xiaojing Weng and Oi-Lam Ng and Zhihao Cui and Suzannie Leung},
title = {Creativity Development With Problem-Based Digital Making and Block-Based Programming for Science, Technology, Engineering, Arts, and Mathematics Learning in Middle School Contexts},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {2},
pages = {304–328},
year = {2023i},
doi = {10.1177/07356331221115661},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221115661},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221115661},
abstract = {Creativity, one of the cornerstones of students’ 21st-century skills, is regarded as an important learning outcome of science, technology, engineering, arts, and mathematics (STEAM) education. Meanwhile, problem-based digital making (DM), which combines the child-friendly programming activities of DM with problem-solving elements, is an emerging instructional design to facilitate STEAM learning. This qualitative case study examines the implementation of a problem-based DM instructional program that used the block-based programming tool Scratch to cultivate the participants’ creativity. Fifty-four middle school students (aged 10–14 years) in Hong Kong participated in the program, which totaled 10 contact hours over five consecutive weeks. Through triangulating students’ DM artifacts, video recordings, field notes, and interviews, the researchers characterized the students’ creative expression, examined the role of problem-based DM in encouraging creative work, and investigated the use of Scratch for mediating student creativity. The results showed that problem-based DM activities fostered students’ creative expressions in the dimensions of novelty, utility, aesthetics, and authenticity. While Scratch mediated the way the students presented their solutions, it had limitations that hindered the students’ digital artifact construction. The findings provide theoretical insights for framing creativity and offer practical implications for the implementation of problem-based DM in K–12 contexts.}
}

@article{doi:10.1177/2399808319885210,
title = {Winners of the Breheny Prize},
journal = {Environment and Planning B: Urban Analytics and City Science},
volume = {46},
number = {9},
pages = {1603–1604},
year = {2019j},
doi = {10.1177/2399808319885210},
URL = {https://doi-org.crai.referencistas.com/10.1177/2399808319885210},
eprint = {https://doi-org.crai.referencistas.com/10.1177/2399808319885210}
}

